@page "/Edit"

@using Blazor.Data
@using FileData
@using Models
@using Blazor.code.persistence

@inject IAdult Adultdata
@inject NavigationManager Nav

<h3>Edit @id</h3>

@if (adultEdit == null)
{
    <em>Adult has not been found</em>
}
else
{
    <EditForm Model="@adultEdit" OnValidSubmit="@save">
        <DataAnnotationsValidator/>
        
        <ValidationSummary/>
           <div class="form-group">
                     Jobtitle:<br/>
                    <InputTextArea @bind-Value="adultEdit.JobTitle"/>
                </div>
        <div class="form-group">
             Id:<br/>
            <InputNumber @bind-Value="adultEdit.Id"/>
        </div>
        <div class="form-group">
            Firstname:<br/>
            <InputTextArea rows="4" @bind-Value="adultEdit.FirstName"/>
        </div>
        <div class="form-group">
            Lastname:<br/>
            <InputTextArea @bind-Value="adultEdit.LastName"/>
        </div>
        <div class="form-group">
            HairColor:<br/>
            <InputTextArea @bind-Value="adultEdit.HairColor"/>
        </div>
        <div class="form-group">
            EyeColor:<br/>
            <InputTextArea @bind-Value="adultEdit.EyeColor"/>
        </div>
        <div class="form-group">
                    Age:<br/>
                    <InputNumber @bind-Value="adultEdit.Age"/>
                </div>
                <div class="form-group">
                    Weight:<br/>
                    <InputNumber @bind-Value="adultEdit.Weight"/>
                </div>
        <div class="form-group">
                    Height:<br/>
                    <InputNumber @bind-Value="adultEdit.Height"/>
                </div>
                <div class="form-group">
                    Sex:<br/>
                    <InputTextArea @bind-Value="adultEdit.Sex"/>
                </div>
        <p class="actions">
            <button class="btn btn-outline-dark" type="submit">Save</button>
        </p>
    </EditForm>
}

@code {

    [Parameter]
    public int id { get; set; }

    private Adult adultEdit;

    protected override async Task OnInitializedAsync()
    {
        adultEdit = Adultdata.get(id);
    }

    private void save()
    {
        Adultdata.Update(adultEdit);
        Nav.NavigateTo("/Adults");

    }

}